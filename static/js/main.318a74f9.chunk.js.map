{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","parseday","time","Tasks","tasks","map","AddTask","useState","setText","setParseDay","day","setDay","setTime","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","selected","placeholderText","date","format","dateFormat","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.318a74f9.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ( { color, text, onClick }) => {\r\n    return (\r\n    <button \r\n        onClick={onClick} \r\n        style={{backgroundColor: color}}\r\n        className='btn'\r\n    >\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? \r\n            'Close' : 'Add'} onClick=\r\n            {onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.parseday}</p>\r\n      <p>{task.time}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} \r\n                task={task}\r\n                onDelete={onDelete} \r\n                onToggle={onToggle}\r\n                />\r\n            ))}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [parseday, setParseDay] = useState(\"\");\r\n  const [day, setDay] = useState(null);\r\n  const [time, setTime] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please Add Task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, parseday, time, reminder });\r\n\r\n    setText(\"\");\r\n    setParseDay(\"\");\r\n    setDay(\"\");\r\n    setTime(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control\">\r\n        <label>Day</label>\r\n        <DatePicker\r\n          selected={day}\r\n          placeholderText=\"Add Day\"\r\n          onChange={(date) => {\r\n            setDay(date);\r\n            setParseDay(format(date, \"dd/MM/yyyy\"));\r\n          }}\r\n          dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Time\"\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doc appointment\",\n      parseday: \"8/16/2021\",\n      time: \"9:00 AM\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"School meeting\",\n      parseday: \"9/14/2021\",\n      time: \"8:00 AM\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Food shopping\",\n      parseday: \"7/14/2021\",\n      time: \"3:00 PM\",\n      reminder: false,\n    },\n  ]);\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  //Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}